mutate(Data = as.Date.character(Data, tryFormats = "%d/%m/%Y")) %>%
mutate(Desfecho =ifelse(Desfecho == "V", 1, 0),
eFG = ((A2C + (1.5 * A3C)) / (A2T+A3T)) * 100 ) %>%
group_by(Equipe) %>%
summarise(Vitorias = sum(Desfecho),
eFG = mean(eFG),
A3taxa = (sum(A3T)/(sum(A3T) + sum(A2T)))*100,
A3T = mean(A3T),
A2T = mean(A2T)) %>%
ungroup() %>%
arrange(desc(eFG)) %>%
select(-Vitorias) %>%
#Tabela
gt() %>%
gt_theme_espn() %>%
cols_label(eFG = "eFG%", A3taxa = "3P-R") %>%
fmt_number(decimals = 1) %>%
data_color(columns = c(eFG), palette = "Oranges", domain = c(49,60), na_color="white") %>%
data_color(columns = c(A3taxa, A2T, A3T), palette = "Greys", alpha=0.5) %>%
tab_options(data_row.padding = px(2), table.width = "300px")
grafico.efg + tabela.efg
tabela.efg <- dados_nbb_5temporadas %>%
filter(Temporada == "2023/24") %>%
mutate(Data = as.Date.character(Data, tryFormats = "%d/%m/%Y")) %>%
mutate(Desfecho =ifelse(Desfecho == "V", 1, 0),
eFG = ((A2C + (1.5 * A3C)) / (A2T+A3T)) * 100 ) %>%
group_by(Equipe) %>%
summarise(Vitorias = sum(Desfecho),
eFG = mean(eFG),
A3taxa = (sum(A3T)/(sum(A3T) + sum(A2T)))*100,
A3T = mean(A3T),
A2T = mean(A2T)) %>%
ungroup() %>%
arrange(desc(eFG)) %>%
select(-Vitorias) %>%
#Tabela
gt() %>%
gt_theme_538 %>%
cols_label(eFG = "eFG%", A3taxa = "3P-R") %>%
fmt_number(decimals = 1) %>%
data_color(columns = c(eFG), palette = "Oranges", domain = c(49,60), na_color="white") %>%
data_color(columns = c(A3taxa, A2T, A3T), palette = "Greys", alpha=0.5) %>%
tab_options(data_row.padding = px(2), table.width = "300px")
grafico.efg + tabela.efg
grafico.efg + tabela.efg +
ggsave("grafico-tabela.png", h=5, w=7, dpi=200)
temp <- "2023/24"
tabela.efg <- dados_nbb_5temporadas %>%
filter(Temporada == temp) %>%
mutate(Data = as.Date.character(Data, tryFormats = "%d/%m/%Y")) %>%
mutate(Desfecho =ifelse(Desfecho == "V", 1, 0),
eFG = ((A2C + (1.5 * A3C)) / (A2T+A3T)) * 100 ) %>%
group_by(Equipe) %>%
summarise(Vitorias = sum(Desfecho),
eFG = mean(eFG),
A3taxa = (sum(A3T)/(sum(A3T) + sum(A2T)))*100,
A3T = mean(A3T),
A2T = mean(A2T)) %>%
ungroup() %>%
arrange(desc(eFG)) %>%
select(-Vitorias) %>%
#Tabela
gt() %>%
gt_theme_538 %>%
cols_label(eFG = "eFG%", A3taxa = "3P-R") %>%
fmt_number(decimals = 1) %>%
data_color(columns = c(eFG), palette = "Oranges", domain = c(49,60), na_color="white") %>%
data_color(columns = c(A3taxa, A2T, A3T), palette = "Greys", alpha=0.5) %>%
tab_options(data_row.padding = px(2), table.width = "300px")
grafico.efg <- dados_nbb_5temporadas %>%
filter(Temporada == temp) %>%
mutate(Data = as.Date.character(Data, tryFormats = "%d/%m/%Y")) %>%
mutate(Desfecho =ifelse(Desfecho == "V", 1, 0),
eFG = ((A2C + (1.5 * A3C)) / (A2T+A3T)) * 100 ) %>%
group_by(Equipe) %>%
summarise(Vitorias = sum(Desfecho),
eFG = mean(eFG),
A3taxa = (sum(A3T)/(sum(A3T) + sum(A2T)))*100,
A3T = mean(A3T),
A2T = mean(A2T)) %>%
ungroup() %>%
# Gráfico
ggplot() +
aes(Vitorias, eFG) +
geom_point(size = 5, alpha = .3) +
geom_smooth(method = "lm", color = "Orange") +
ylab("eFG%") +
xlab("Número de vitórias") +
scale_x_continuous(expand = c(0,0), n.breaks = 10) +
theme_bw()
grafico.efg + tabela.efg
temp <- "2022/23"
tabela.efg <- dados_nbb_5temporadas %>%
filter(Temporada == temp) %>%
mutate(Data = as.Date.character(Data, tryFormats = "%d/%m/%Y")) %>%
mutate(Desfecho =ifelse(Desfecho == "V", 1, 0),
eFG = ((A2C + (1.5 * A3C)) / (A2T+A3T)) * 100 ) %>%
group_by(Equipe) %>%
summarise(Vitorias = sum(Desfecho),
eFG = mean(eFG),
A3taxa = (sum(A3T)/(sum(A3T) + sum(A2T)))*100,
A3T = mean(A3T),
A2T = mean(A2T)) %>%
ungroup() %>%
arrange(desc(eFG)) %>%
select(-Vitorias) %>%
#Tabela
gt() %>%
gt_theme_538 %>%
cols_label(eFG = "eFG%", A3taxa = "3P-R") %>%
fmt_number(decimals = 1) %>%
data_color(columns = c(eFG), palette = "Oranges", domain = c(49,60), na_color="white") %>%
data_color(columns = c(A3taxa, A2T, A3T), palette = "Greys", alpha=0.5) %>%
tab_options(data_row.padding = px(2), table.width = "300px")
grafico.efg <- dados_nbb_5temporadas %>%
filter(Temporada == temp) %>%
mutate(Data = as.Date.character(Data, tryFormats = "%d/%m/%Y")) %>%
mutate(Desfecho =ifelse(Desfecho == "V", 1, 0),
eFG = ((A2C + (1.5 * A3C)) / (A2T+A3T)) * 100 ) %>%
group_by(Equipe) %>%
summarise(Vitorias = sum(Desfecho),
eFG = mean(eFG),
A3taxa = (sum(A3T)/(sum(A3T) + sum(A2T)))*100,
A3T = mean(A3T),
A2T = mean(A2T)) %>%
ungroup() %>%
# Gráfico
ggplot() +
aes(Vitorias, eFG) +
geom_point(size = 5, alpha = .3) +
geom_smooth(method = "lm", color = "Orange") +
ylab("eFG%") +
xlab("Número de vitórias") +
scale_x_continuous(expand = c(0,0), n.breaks = 10) +
theme_bw()
grafico.efg + tabela.efg
tabela.efg <- dados_nbb_5temporadas %>%
filter(Temporada == temp) %>%
mutate(Data = as.Date.character(Data, tryFormats = "%d/%m/%Y")) %>%
mutate(Desfecho =ifelse(Desfecho == "V", 1, 0),
eFG = ((A2C + (1.5 * A3C)) / (A2T+A3T)) * 100 ) %>%
group_by(Equipe) %>%
summarise(Vitorias = sum(Desfecho),
eFG = mean(eFG),
A3taxa = (sum(A3T)/(sum(A3T) + sum(A2T)))*100,
A3T = mean(A3T),
A2T = mean(A2T)) %>%
ungroup() %>%
arrange(desc(eFG)) %>%
select(-Vitorias) %>%
#Tabela
gt() %>%
gt_theme_538 %>%
cols_label(eFG = "eFG%", A3taxa = "3P-R") %>%
fmt_number(decimals = 1) %>%
data_color(columns = c(eFG), palette = "Oranges", domain = c(49,60), na_color="white") %>%
data_color(columns = c(A3taxa, A2T, A3T), palette = "Greys", alpha=0.5) %>%
tab_options(data_row.padding = px(2), table.width = "250px")
grafico.efg <- dados_nbb_5temporadas %>%
filter(Temporada == temp) %>%
mutate(Data = as.Date.character(Data, tryFormats = "%d/%m/%Y")) %>%
mutate(Desfecho =ifelse(Desfecho == "V", 1, 0),
eFG = ((A2C + (1.5 * A3C)) / (A2T+A3T)) * 100 ) %>%
group_by(Equipe) %>%
summarise(Vitorias = sum(Desfecho),
eFG = mean(eFG),
A3taxa = (sum(A3T)/(sum(A3T) + sum(A2T)))*100,
A3T = mean(A3T),
A2T = mean(A2T)) %>%
ungroup() %>%
# Gráfico
ggplot() +
aes(Vitorias, eFG) +
geom_point(size = 5, alpha = .3) +
geom_smooth(method = "lm", color = "Orange") +
ylab("eFG%") +
xlab("Número de vitórias") +
scale_x_continuous(expand = c(0,0), n.breaks = 10) +
theme_bw()
grafico.efg + tabela.efg
temp <- "2018/19"
tabela.efg <- dados_nbb_5temporadas %>%
filter(Temporada == temp) %>%
mutate(Data = as.Date.character(Data, tryFormats = "%d/%m/%Y")) %>%
mutate(Desfecho =ifelse(Desfecho == "V", 1, 0),
eFG = ((A2C + (1.5 * A3C)) / (A2T+A3T)) * 100 ) %>%
group_by(Equipe) %>%
summarise(Vitorias = sum(Desfecho),
eFG = mean(eFG),
A3taxa = (sum(A3T)/(sum(A3T) + sum(A2T)))*100,
A3T = mean(A3T),
A2T = mean(A2T)) %>%
ungroup() %>%
arrange(desc(eFG)) %>%
select(-Vitorias) %>%
#Tabela
gt() %>%
gt_theme_538 %>%
cols_label(eFG = "eFG%", A3taxa = "3P-R") %>%
fmt_number(decimals = 1) %>%
data_color(columns = c(eFG), palette = "Oranges", domain = c(49,60), na_color="white") %>%
data_color(columns = c(A3taxa, A2T, A3T), palette = "Greys", alpha=0.5) %>%
tab_options(data_row.padding = px(2), table.width = "250px")
grafico.efg <- dados_nbb_5temporadas %>%
filter(Temporada == temp) %>%
mutate(Data = as.Date.character(Data, tryFormats = "%d/%m/%Y")) %>%
mutate(Desfecho =ifelse(Desfecho == "V", 1, 0),
eFG = ((A2C + (1.5 * A3C)) / (A2T+A3T)) * 100 ) %>%
group_by(Equipe) %>%
summarise(Vitorias = sum(Desfecho),
eFG = mean(eFG),
A3taxa = (sum(A3T)/(sum(A3T) + sum(A2T)))*100,
A3T = mean(A3T),
A2T = mean(A2T)) %>%
ungroup() %>%
# Gráfico
ggplot() +
aes(Vitorias, eFG) +
geom_point(size = 5, alpha = .3) +
geom_smooth(method = "lm", color = "Orange") +
ylab("eFG%") +
xlab("Número de vitórias") +
scale_x_continuous(expand = c(0,0), n.breaks = 10) +
theme_bw()
grafico.efg + tabela.efg
grafico.efg <- dados_nbb_5temporadas %>%
filter(Temporada == temp) %>%
mutate(Data = as.Date.character(Data, tryFormats = "%d/%m/%Y")) %>%
mutate(Desfecho =ifelse(Desfecho == "V", 1, 0),
eFG = ((A2C + (1.5 * A3C)) / (A2T+A3T)) * 100 ) %>%
group_by(Equipe) %>%
summarise(Vitorias = sum(Desfecho),
eFG = mean(eFG),
A3taxa = (sum(A3T)/(sum(A3T) + sum(A2T)))*100,
A3T = mean(A3T),
A2T = mean(A2T)) %>%
ungroup() %>%
# Gráfico
ggplot() +
aes(Vitorias, eFG) +
geom_point(size = 5, alpha = .3) +
geom_smooth(method = "lm", color = "Orange") +
ggtitle("Relação eFG% x Vitorias", subtitle = "Temporadas" + temp + " do NBB")
grafico.efg <- dados_nbb_5temporadas %>%
filter(Temporada == temp) %>%
mutate(Data = as.Date.character(Data, tryFormats = "%d/%m/%Y")) %>%
mutate(Desfecho =ifelse(Desfecho == "V", 1, 0),
eFG = ((A2C + (1.5 * A3C)) / (A2T+A3T)) * 100 ) %>%
group_by(Equipe) %>%
summarise(Vitorias = sum(Desfecho),
eFG = mean(eFG),
A3taxa = (sum(A3T)/(sum(A3T) + sum(A2T)))*100,
A3T = mean(A3T),
A2T = mean(A2T)) %>%
ungroup() %>%
# Gráfico
ggplot() +
aes(Vitorias, eFG) +
geom_point(size = 5, alpha = .3) +
geom_smooth(method = "lm", color = "Orange") +
ggtitle("Relação eFG% x Vitorias", subtitle = "Temporadas do NBB")
grafico.efg + tabela.efg
library(tidyverse)
library(gt)
library(gtExtras)
dados_nbb_5temporadas <- read.csv("dados_nbb_5temporadas.csv", header = TRUE, sep = ";")
tabela.efg <- dados_nbb_5temporadas %>%
filter(Temporada == temp) %>%
mutate(Data = as.Date.character(Data, tryFormats = "%d/%m/%Y")) %>%
mutate(Desfecho =ifelse(Desfecho == "V", 1, 0),
eFG = ((A2C + (1.5 * A3C)) / (A2T+A3T)) * 100 ) %>%
group_by(Equipe) %>%
summarise(Vitorias = sum(Desfecho),
eFG = mean(eFG),
A3taxa = (sum(A3T)/(sum(A3T) + sum(A2T)))*100,
A3T = mean(A3T),
A2T = mean(A2T)) %>%
ungroup() %>%
tabela.efg <- dados_nbb_5temporadas %>%
mutate(Data = as.Date.character(Data, tryFormats = "%d/%m/%Y")) %>%
mutate(Desfecho =ifelse(Desfecho == "V", 1, 0),
eFG = ((A2C + (1.5 * A3C)) / (A2T+A3T)) * 100 ) %>%
group_by(Equipe) %>%
summarise(Vitorias = sum(Desfecho),
eFG = mean(eFG),
A3taxa = (sum(A3T)/(sum(A3T) + sum(A2T)))*100,
A3T = mean(A3T),
A2T = mean(A2T)) %>% view()
library(tidyverse)
library(gt)
dados_nbb_5temporadas <- read.csv("dados_nbb_5temporadas.csv", header = TRUE, sep = ";")
library(gtExtras)
dados_nbb_5temporadas <- read.csv("dados_nbb_5temporadas.csv", header = TRUE, sep = ";")
tabela.efg <- dados_nbb_5temporadas %>%
mutate(Data = as.Date.character(Data, tryFormats = "%d/%m/%Y")) %>%
mutate(Desfecho =ifelse(Desfecho == "V", 1, 0),
eFG = ((A2C + (1.5 * A3C)) / (A2T+A3T)) * 100 ) %>%
group_by(Equipe) %>%
summarise(Vitorias = sum(Desfecho),
eFG = mean(eFG),
A3taxa = (sum(A3T)/(sum(A3T) + sum(A2T)))*100,
A3T = mean(A3T),
A2T = mean(A2T)) %>% view()
tabela.efg <- dados_nbb_5temporadas %>%
filter(Temporada == '2023/24') %>%
mutate(Data = as.Date.character(Data, tryFormats = "%d/%m/%Y")) %>%
mutate(Desfecho =ifelse(Desfecho == "V", 1, 0),
eFG = ((A2C + (1.5 * A3C)) / (A2T+A3T)) * 100 ) %>%
group_by(Equipe) %>%
summarise(Vitorias = sum(Desfecho),
eFG = mean(eFG),
A3taxa = (sum(A3T)/(sum(A3T) + sum(A2T)))*100,
A3T = mean(A3T),
A2T = mean(A2T)) %>% view()
tabela.efg <- dados_nbb_5temporadas %>%
filter(Temporada == "2018/19") %>%
mutate(Data = as.Date.character(Data, tryFormats = "%d/%m/%Y")) %>%
mutate(Desfecho =ifelse(Desfecho == "V", 1, 0),
eFG = ((A2C + (1.5 * A3C)) / (A2T+A3T)) * 100 ) %>%
group_by(Equipe) %>%
summarise(Vitorias = sum(Desfecho),
eFG = mean(eFG),
A3taxa = (sum(A3T)/(sum(A3T) + sum(A2T)))*100,
A3T = mean(A3T),
A2T = mean(A2T)) %>% view()
tabela.efg <- dados_nbb_5temporadas %>%
filter(Temporada == "2023/24") %>%
mutate(Data = as.Date.character(Data, tryFormats = "%d/%m/%Y")) %>%
mutate(Desfecho =ifelse(Desfecho == "V", 1, 0),
eFG = ((A2C + (1.5 * A3C)) / (A2T+A3T)) * 100 ) %>%
group_by(Equipe) %>%
summarise(Vitorias = sum(Desfecho),
eFG = mean(eFG),
A3taxa = (sum(A3T)/(sum(A3T) + sum(A2T)))*100,
A3T = mean(A3T),
A2T = mean(A2T)) %>% view()
View(dados_nbb_5temporadas)
# Carregar as bibliotecas necessárias
library(tidyverse)
# Carregar o dataset
dados_nbb <- read.csv("caminho/para/dados_nbb_5temporadas.csv", sep = ";")
# Criar a coluna do aproveitamento efetivo de campo (eFG%)
dados_nbb <- dados_nbb %>%
mutate(eFG = (A2C + 1.5 * A3C) / (A2T + A3T))
# Agrupar por temporada e calcular o eFG% médio de cada temporada
efg_por_temporada <- dados_nbb %>%
group_by(Temporada) %>%
summarise(media_eFG = mean(eFG, na.rm = TRUE))
# Visualizar a tendência do eFG% ao longo das temporadas
ggplot(efg_por_temporada, aes(x = Temporada, y = media_eFG)) +
geom_line(group = 1, color = "blue") +
geom_point(size = 3, color = "red") +
labs(title = "Tendência do Aproveitamento Efetivo (eFG%) ao Longo das Temporadas",
x = "Temporada",
y = "Aproveitamento Efetivo (eFG%)") +
theme_minimal()
# Carregar o dataset
dados_nbb <- read.csv("dados_nbb_5temporadas.csv", sep = ";")
# Criar a coluna do aproveitamento efetivo de campo (eFG%)
dados_nbb <- dados_nbb %>%
mutate(eFG = (A2C + 1.5 * A3C) / (A2T + A3T))
# Agrupar por temporada e calcular o eFG% médio de cada temporada
efg_por_temporada <- dados_nbb %>%
group_by(Temporada) %>%
summarise(media_eFG = mean(eFG, na.rm = TRUE))
# Visualizar a tendência do eFG% ao longo das temporadas
ggplot(efg_por_temporada, aes(x = Temporada, y = media_eFG)) +
geom_line(group = 1, color = "blue") +
geom_point(size = 3, color = "red") +
labs(title = "Tendência do Aproveitamento Efetivo (eFG%) ao Longo das Temporadas",
x = "Temporada",
y = "Aproveitamento Efetivo (eFG%)") +
theme_minimal()
# Criar a coluna do aproveitamento efetivo de campo (eFG%)
dados_nbb <- dados_nbb %>%
mutate(eFG = (A2C + 1.5 * A3C) / (A2T + A3T))
# Agrupar por temporada e equipe, e calcular o eFG% médio de cada equipe por temporada
efg_por_temporada_equipe <- dados_nbb %>%
group_by(Temporada, Equipe) %>%
summarise(media_eFG = mean(eFG, na.rm = TRUE)) %>%
ungroup()
# Visualizar a tendência do eFG% por equipe ao longo das temporadas
ggplot(efg_por_temporada_equipe, aes(x = Temporada, y = media_eFG, color = Equipe, group = Equipe)) +
geom_line(size = 1) +
geom_point(size = 2) +
labs(title = "Tendência do Aproveitamento Efetivo (eFG%) por Equipe ao Longo das Temporadas",
x = "Temporada",
y = "Aproveitamento Efetivo (eFG%)",
color = "Equipe") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Agrupar por temporada e calcular a média de pontos (PTS) por temporada
pts_por_temporada <- dados_nbb %>%
group_by(Temporada) %>%
summarise(media_PTS = mean(PTS, na.rm = TRUE))
# Visualizar a tendência dos pontos (PTS) ao longo das temporadas
ggplot(pts_por_temporada, aes(x = Temporada, y = media_PTS)) +
geom_line(group = 1, color = "blue") +
geom_point(size = 3, color = "red") +
labs(title = "Evolução da Média de Pontos (PTS) por Temporada",
x = "Temporada",
y = "Média de Pontos (PTS)") +
theme_minimal()
# Remover possíveis valores faltantes nas colunas de RBD e DFP
dados_nbb_limp <- dados_nbb %>%
filter(!is.na(RBD), !is.na(DFP))
# Calcular a correlação entre os rebotes defensivos (RBD) e a eficiência defensiva (DFP)
correlacao_rbd_dfp <- cor(dados_nbb_limp$RBD, dados_nbb_limp$DFP)
# Exibir a correlação
print(paste("Correlação entre RBD e DFP: ", correlacao_rbd_dfp))
# Visualizar a relação entre os rebotes defensivos e a eficiência defensiva
ggplot(dados_nbb_limp, aes(x = RBD, y = DFP)) +
geom_point(color = "blue", alpha = 0.6) +
geom_smooth(method = "lm", color = "red", se = FALSE) +
labs(title = "Relação entre Rebotes Defensivos (RBD) e Eficiência Defensiva (DFP)",
x = "Rebotes Defensivos (RBD)",
y = "Eficiência Defensiva (DFP)") +
theme_minimal()
# Carregar as bibliotecas necessárias
library(tidyverse)
# Carregar o dataset
dados_nbb <- read.csv("dados_nbb_5temporadas.csv", sep = ";")
View(dados_nbb_5temporadas)
View(dados_nbb_5temporadas)
# Filtrar os dados para a temporada 2023/24 e uma equipe específica, por exemplo "Equipe X"
dados_filtrados <- dados_nbb %>%
filter(Temporada == "2023/24", Equipe == "Equipe X") %>%
# Criar a coluna de Field Goal % (FG%)
mutate(FG_perc = (A2C + A3C) / (A2T + A3T) * 100)
View(dados_filtrados)
# Carregar as bibliotecas necessárias
library(tidyverse)
# Carregar o dataset
dados_nbb <- read.csv("dados_nbb_5temporadas.csv", sep = ";")
# Filtrar os dados para a temporada 2023/24 e uma equipe específica, por exemplo "Equipe X"
dados_filtrados <- dados_nbb %>%
filter(Temporada == "2023/24", Equipe == "Equipe X") %>%
# Criar a coluna de Field Goal % (FG%)
mutate(FG_perc = (A2C + A3C) / (A2T + A3T) * 100)
View(dados_filtrados)
View(dados_filtrados)
# Carregar as bibliotecas necessárias
library(tidyverse)
# Carregar o dataset
dados_nbb <- read.csv("dados_nbb_5temporadas.csv", sep = ";")
# Filtrar os dados para a temporada 2023/24 e uma equipe específica, por exemplo "Equipe X"
dados_filtrados <- dados_nbb %>%
filter(Temporada == "2023/24", Equipe == "Equipe X") %>%
# Criar a coluna de Field Goal % (FG%)
mutate(FG_perc = (A2C + A3C) / (A2T + A3T) * 100)
# Carregar as bibliotecas necessárias
library(tidyverse)
# Carregar o dataset
dados_nbb <- read.csv("dados_nbb_5temporadas.csv", sep = ";")
# Filtrar os dados para a temporada 2023/24 e uma equipe específica, por exemplo "Equipe X"
dados_filtrados <- dados_nbb %>%
filter(Temporada == "2023/24", Equipe == "Equipe X") %>%
# Criar a coluna de Field Goal % (FG%)
mutate(FG_perc = (A2C + A3C) / (A2T + A3T) * 100)
# Filtrar os dados para a temporada 2023/24 e uma equipe específica, por exemplo "Equipe X"
dados_filtrados <- dados_nbb %>%
filter(Temporada == "2023/24", Equipe == "FRA") %>%
# Criar a coluna de Field Goal % (FG%)
mutate(FG_perc = (A2C + A3C) / (A2T + A3T) * 100)
# Plotar o gráfico de dispersão com FG% no eixo X, PTS no eixo Y e desfecho categorizado por cor
ggplot(dados_filtrados, aes(x = FG_perc, y = PTS, color = Desfecho)) +
geom_point(size = 3) +
labs(title = "Relação entre Field Goal % e Pontos (PTS) para Equipe X - Temporada 2023/24",
x = "Field Goal %",
y = "Pontos (PTS)",
color = "Desfecho") +
theme_minimal()
# Filtrar os dados para a temporada 2023/24 e uma equipe específica, por exemplo "Equipe X"
dados_filtrados <- dados_nbb %>%
filter(Temporada == "2023/24", Equipe == "UFC") %>%
# Criar a coluna de Field Goal % (FG%)
mutate(FG_perc = (A2C + A3C) / (A2T + A3T) * 100)
# Plotar o gráfico de dispersão com FG% no eixo X, PTS no eixo Y e desfecho categorizado por cor
ggplot(dados_filtrados, aes(x = FG_perc, y = PTS, color = Desfecho)) +
geom_point(size = 3) +
labs(title = "Relação entre Field Goal % e Pontos (PTS) para Equipe X - Temporada 2023/24",
x = "Field Goal %",
y = "Pontos (PTS)",
color = "Desfecho") +
theme_minimal()
View(dados_filtrados)
# Filtrar os dados para a temporada 2023/24 e uma equipe específica, por exemplo "Equipe X"
dados_filtrados <- dados_nbb %>%
filter(Temporada == "2023/24", Equipe == "UFC") %>%
# Criar a coluna de Field Goal % (FG%)
mutate(FG_perc = (A2C + A3C + LLC) / (A2T + A3T + LLT) * 100)
# Plotar o gráfico de dispersão com FG% no eixo X, PTS no eixo Y e desfecho categorizado por cor
ggplot(dados_filtrados, aes(x = FG_perc, y = PTS, color = Desfecho)) +
geom_point(size = 3) +
labs(title = "Relação entre Field Goal % e Pontos (PTS) para Equipe X - Temporada 2023/24",
x = "Field Goal %",
y = "Pontos (PTS)",
color = "Desfecho") +
theme_minimal()
# Filtrar os dados para a temporada 2023/24 e uma equipe específica, por exemplo "Equipe X"
dados_filtrados <- dados_nbb %>%
filter(Temporada == "2023/24", Equipe == "UFC") %>%
# Criar a coluna de Field Goal % (FG%)
mutate(FG_perc = (A2C + A3C) / (A2T + A3T) * 100)
# Plotar o gráfico de dispersão com FG% no eixo X, PTS no eixo Y e desfecho categorizado por cor
ggplot(dados_filtrados, aes(x = FG_perc, y = PTS, color = Desfecho)) +
geom_point(size = 3) +
labs(title = "Relação entre Field Goal % e Pontos (PTS) para Equipe X - Temporada 2023/24",
x = "Field Goal %",
y = "Pontos (PTS)",
color = "Desfecho") +
theme_minimal()
